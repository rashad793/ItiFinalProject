// <auto-generated />
using FinalProject.ApplicationContaxt;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20250913141835_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Audio & Computing",
                            Description = "High-quality audio and computing equipment"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Mobile Technology",
                            Description = "Portable tech devices and accessories"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Home Essentials",
                            Description = "Essential products for daily home use"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "Wellness Products",
                            Description = "Products for relaxation and personal care"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Clothing",
                            Description = "Comfortable and sustainable clothing"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 1,
                            Description = "High-quality wireless headphones with noise cancellation and 20-hour battery life",
                            ImagePath = "",
                            Price = 79.99m,
                            Quantity = 25,
                            Title = "Wireless Bluetooth Headphones"
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3,
                            Description = "Double-wall insulated water bottle that keeps drinks cold for 24 hours",
                            ImagePath = "",
                            Price = 24.95m,
                            Quantity = 50,
                            Title = "Stainless Steel Water Bottle"
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "RGB backlit mechanical keyboard with Cherry MX switches",
                            ImagePath = "",
                            Price = 129.99m,
                            Quantity = 15,
                            Title = "Mechanical Keyboard"
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 5,
                            Description = "100% organic cotton t-shirt available in multiple colors and sizes",
                            ImagePath = "",
                            Price = 29.99m,
                            Quantity = 100,
                            Title = "Organic Cotton T-Shirt"
                        },
                        new
                        {
                            ProductId = 5,
                            CategoryId = 4,
                            Description = "Water-resistant fitness tracker with heart rate monitor and sleep tracking",
                            ImagePath = "",
                            Price = 89.99m,
                            Quantity = 30,
                            Title = "Smart Fitness Tracker"
                        },
                        new
                        {
                            ProductId = 6,
                            CategoryId = 3,
                            Description = "Set of 4 handcrafted ceramic mugs with elegant design",
                            ImagePath = "",
                            Price = 34.99m,
                            Quantity = 40,
                            Title = "Ceramic Coffee Mug Set"
                        },
                        new
                        {
                            ProductId = 7,
                            CategoryId = 2,
                            Description = "Fast wireless charging pad compatible with Qi-enabled devices",
                            ImagePath = "",
                            Price = 39.99m,
                            Quantity = 35,
                            Title = "Wireless Phone Charger"
                        },
                        new
                        {
                            ProductId = 8,
                            CategoryId = 4,
                            Description = "Eco-friendly yoga mat with non-slip surface and carrying strap",
                            ImagePath = "",
                            Price = 54.95m,
                            Quantity = 20,
                            Title = "Yoga Mat Premium"
                        },
                        new
                        {
                            ProductId = 9,
                            CategoryId = 1,
                            Description = "1TB portable SSD with USB-C connectivity and fast transfer speeds",
                            ImagePath = "",
                            Price = 149.99m,
                            Quantity = 18,
                            Title = "Portable External SSD"
                        },
                        new
                        {
                            ProductId = 10,
                            CategoryId = 4,
                            Description = "Ultrasonic essential oil diffuser with color-changing LED lights",
                            ImagePath = "",
                            Price = 45.99m,
                            Quantity = 28,
                            Title = "Aromatherapy Diffuser"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "john.doe@email.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "John@123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "jane.smith@email.com",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Password = "Jane@456"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "michael.j@email.com",
                            FirstName = "Michael",
                            LastName = "Johnson",
                            Password = "Mike@789"
                        },
                        new
                        {
                            UserId = 4,
                            Email = "sarah.wilson@email.com",
                            FirstName = "Sarah",
                            LastName = "Wilson",
                            Password = "Sarah#001"
                        },
                        new
                        {
                            UserId = 5,
                            Email = "david.brown@email.com",
                            FirstName = "David",
                            LastName = "Brown",
                            Password = "David#002"
                        },
                        new
                        {
                            UserId = 6,
                            Email = "emily.davis@email.com",
                            FirstName = "Emily",
                            LastName = "Davis",
                            Password = "Emily#003"
                        },
                        new
                        {
                            UserId = 7,
                            Email = "robert.m@email.com",
                            FirstName = "Robert",
                            LastName = "Miller",
                            Password = "Robert#004"
                        },
                        new
                        {
                            UserId = 8,
                            Email = "lisa.taylor@email.com",
                            FirstName = "Lisa",
                            LastName = "Taylor",
                            Password = "Lisa#005"
                        },
                        new
                        {
                            UserId = 9,
                            Email = "james.a@email.com",
                            FirstName = "James",
                            LastName = "Anderson",
                            Password = "James#006"
                        },
                        new
                        {
                            UserId = 10,
                            Email = "maria.g@email.com",
                            FirstName = "Maria",
                            LastName = "Garcia",
                            Password = "Maria#007"
                        });
                });

            modelBuilder.Entity("FinalProject.Models.Product", b =>
                {
                    b.HasOne("FinalProject.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinalProject.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
